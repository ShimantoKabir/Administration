// <auto-generated />
using System;
using Administration.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Administration.Migrations
{
    [DbContext(typeof(AdministrationDBCtx))]
    partial class AdministrationDBCtxModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Administration.Models.Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("component")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("menuName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("modifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("orgId")
                        .HasColumnType("int");

                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.Property<string>("path")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("power")
                        .HasColumnType("int");

                    b.Property<int>("projectId")
                        .HasColumnType("int");

                    b.Property<string>("tooltip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("Administration.Models.Organization", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("modifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("orgName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("organizations");
                });

            modelBuilder.Entity("Administration.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("modifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Administration.Models.RestrictedMenu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("menuId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("restrictedMenus");
                });

            modelBuilder.Entity("Administration.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("modifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("power")
                        .HasColumnType("int");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Administration.Models.UserConfiguration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("modifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("orgId")
                        .HasColumnType("int");

                    b.Property<int?>("projectId")
                        .HasColumnType("int");

                    b.Property<int?>("roleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("userConfigurations");
                });

            modelBuilder.Entity("Administration.Models.UserInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("imgUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("modifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("opAccess")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("orgId")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("socialLoginId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("userId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("userName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("userInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
